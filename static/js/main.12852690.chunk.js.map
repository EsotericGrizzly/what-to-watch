{"version":3,"sources":["components/mainpage/SearchBar/search.svg","components/mainpage/SearchBar/SearchBar.js","customHooks/useDataFetching.js","components/mainpage/ContentCard/buttons/arrow.svg","components/mainpage/ContentCard/buttons/ButtonPrev.js","components/mainpage/ContentCard/buttons/ButtonNext.js","components/mainpage/ContentCard/ContentCard.js","components/mainpage/MovieDetails/MovieDetails.js","components/ShakaPlayer/ShakaPlayer.js","components/App.js","index.js"],"names":["SearchBar","setSearch","useState","input","setInput","className","onSubmit","e","preventDefault","onChange","target","value","onClick","src","search","alt","useDataFetching","dataSource","loading","setLoading","results","setResults","error","setError","useEffect","a","fetch","data","json","message","fetchData","ButtonPrev","resultPage","setResultPage","movieIndexSlice","setMovieIndexSlice","enablePrevButton","prevResultPage","id","arrow","ButtonNext","CategoryName","setEnablePrevButton","document","querySelectorAll","forEach","firstChild","innerHTML","scrollTo","behavior","left","ContentCard","url","setMovieDetails","slice","map","movie","index","tabIndex","title","original_name","poster_path","MovieDetails","movieDetails","setPlay","enableElement","getElementsByClassName","disableBodyScroll","enableBodyScroll","overview","vote_average","release_date","first_air_date","substring","shaka","require","ShakaPlayer","props","resetTimer","clearTimeout","time","setTimeout","hidePlayerOverlay","setState","isIdle","componentDidMount","getVH","vh","window","innerHeight","documentElement","style","setProperty","addEventListener","video","videoComponent","current","videoContainer","player","Player","uiConfig","ui","Overlay","configure","getControls","onErrorEvent","load","then","console","log","catch","onError","componentWillUnmount","removeEventListener","timerHandle","state","React","createRef","bind","event","this","detail","code","ref","onMouseMove","onTouchStart","onKeyDown","autoPlay","width","PureComponent","App","play","api_key","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.12852690.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.68392e5c.svg\";","import React, { useState } from \"react\";\r\nimport search from \"./search.svg\";\r\n\r\nimport \"./SearchBar.css\";\r\n\r\nfunction SearchBar({ setSearch }) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  return (\r\n    <form className=\"searchbar\" onSubmit={(e) => e.preventDefault()}>\r\n      <input onChange={(e) => setInput(e.target.value)}></input>\r\n      <button onClick={() => setSearch(input)}>\r\n        <img src={search} alt=\"search\"></img>\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import { useState, useEffect } from 'react';\r\n\r\n//useEffect runs everytime the datasource(url) changes\r\nfunction useDataFetching(dataSource) {\r\n    const [loading, setLoading] = useState(true)\r\n    const [results, setResults] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const data = await fetch(dataSource);\r\n                const json = await data.json();\r\n\r\n                if (json) {\r\n                    setLoading(false);\r\n                    setResults(json.results);\r\n                }                \r\n            }   catch (error) {\r\n                setLoading(false);\r\n                setError(error.message);\r\n            }\r\n\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchData();\r\n    }, [dataSource]);\r\n\r\n    return {\r\n        error,\r\n        loading,\r\n        results\r\n    };\r\n}\r\n\r\nexport default useDataFetching;","export default __webpack_public_path__ + \"static/media/arrow.c3b03577.svg\";","import React from \"react\";\nimport arrow from \"./arrow.svg\";\nimport './ButtonPrev.css';\n\nfunction ButtonPrev({\n  resultPage,\n  setResultPage,\n  movieIndexSlice,\n  setMovieIndexSlice,\n  enablePrevButton\n}) {\n  const handleClickPrev = () => {\n    //changes index of movie.slice to display new results or sets resultsPage to trigger new fetch\n    if (movieIndexSlice[0] === 0 && resultPage > 1) {\n      setResultPage((prevResultPage) => prevResultPage - 1);\n      setMovieIndexSlice([14, 20])\n    } else if (movieIndexSlice[0] === 7) {\n      setMovieIndexSlice([0, 7]);\n    } else if (movieIndexSlice[0] === 14) {\n      setMovieIndexSlice([7, 14]);\n    }\n  };\n\n  return (\n    <button onClick={handleClickPrev} id=\"btn-disabled\" className={enablePrevButton ? \"btn-prev\": null}>\n      <img src={arrow} alt=\"load previous\"></img>\n    </button>\n  );\n}\n\nexport default ButtonPrev;\n","import React from \"react\";\nimport arrow from \"./arrow.svg\";\nimport './ButtonNext.css';\n\nfunction ButtonNext({\n  setResultPage,\n  movieIndexSlice,\n  setMovieIndexSlice,\n  CategoryName,\n  setEnablePrevButton\n}) {\n  const handleClickNext = () => {\n    //scrolls current content card back to beginning (mobile version)\n   document.querySelectorAll(\".content-card\").forEach((e) => {\n      return e.firstChild.innerHTML === CategoryName\n        ? e.scrollTo({\n            behavior: \"smooth\",\n            left: 0,\n          })\n        : null;\n    });\n    setEnablePrevButton(true)\n    //changes index of movie.slice to display new results or sets resultsPage to trigger new fetch\n    if (movieIndexSlice[0] === 0) {\n      setMovieIndexSlice([7, 14]);\n    } else if (movieIndexSlice[0] === 7) {\n      setMovieIndexSlice([14, 20]);\n    } else if (movieIndexSlice[0] === 14) {\n      return (\n        setMovieIndexSlice([0, 7]),\n        setResultPage((prevResultPage) => prevResultPage + 1)\n      );\n    }\n  };\n\n  return (\n    <button onClick={handleClickNext} className=\"btn-next\">\n      <img src={arrow} alt=\"load next\"></img>\n    </button>\n  );\n}\n\nexport default ButtonNext;\n","import React, { useState } from \"react\";\r\nimport useDataFetching from \"../../../customHooks/useDataFetching\";\r\nimport ButtonPrev from \"./buttons/ButtonPrev\";\r\nimport ButtonNext from \"./buttons/ButtonNext\";\r\n\r\nimport \"./ContentCard.css\";\r\n\r\nfunction ContentCard({ CategoryName, url, setMovieDetails }) {\r\n  const [resultPage, setResultPage] = useState(1);\r\n  const [movieIndexSlice, setMovieIndexSlice] = useState([0, 7]);\r\n  const [enablePrevButton, setEnablePrevButton] = useState(false);\r\n  const { loading, results, error } = useDataFetching(\r\n    `${url}&page=${resultPage}`\r\n  );\r\n\r\n  if (loading || error) {\r\n    return loading ? <div className=\"loading\">Loading...</div> : error.message;\r\n  } else {\r\n    return (\r\n      <div className=\"content-card\">\r\n        <h1>{CategoryName}</h1>\r\n        <ButtonPrev\r\n          resultPage={resultPage}\r\n          setResultPage={setResultPage}\r\n          movieIndexSlice={movieIndexSlice}\r\n          setMovieIndexSlice={setMovieIndexSlice}\r\n          enablePrevButton={enablePrevButton}\r\n        />\r\n        {results\r\n          .slice(movieIndexSlice[0], movieIndexSlice[1])\r\n          .map((movie, index) => (\r\n            <li key={movie.id}>\r\n              <img\r\n                tabIndex=\"0\"\r\n                onClick={() =>\r\n                  setMovieDetails(\r\n                    results.slice(movieIndexSlice[0], movieIndexSlice[1])[index]\r\n                  )\r\n                }\r\n                alt={movie.title || movie.original_name}\r\n                src={`https://image.tmdb.org/t/p/w185/${movie.poster_path}`}\r\n              />\r\n              <p>{movie.title || movie.original_name}</p>\r\n            </li>\r\n          ))}\r\n        <ButtonNext\r\n          setResultPage={setResultPage}\r\n          movieIndexSlice={movieIndexSlice}\r\n          setMovieIndexSlice={setMovieIndexSlice}\r\n          CategoryName={CategoryName}\r\n          setEnablePrevButton={setEnablePrevButton}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\nimport './MovieDetails.css';\r\n\r\nfunction MovieDetails({ movieDetails, setMovieDetails, setPlay }) {\r\n\r\n  const enableElement = document.getElementsByClassName(\"movie-details\");\r\n  // disables scroll except for this modal element\r\n  useEffect(() => {\r\n    const disableScroll = () => {\r\n      disableBodyScroll(enableElement);\r\n    };\r\n    disableScroll();\r\n  }, [enableElement]);\r\n\r\n  return (\r\n    <div className=\"background-wrap\">\r\n      <div className=\"content-wrap\">\r\n        <button\r\n          className=\"exit\"\r\n          onClick={() => {\r\n            return (setMovieDetails(), enableBodyScroll(enableElement));\r\n          }}\r\n        >\r\n          X\r\n        </button>\r\n        <div className=\"movie-details\">\r\n          <h2 className=\"title\">\r\n            {movieDetails.title || movieDetails.original_name}\r\n          </h2>\r\n          <p className=\"description\">{movieDetails.overview}</p>\r\n          <div className=\"util\">\r\n            <p>Rating: {movieDetails.vote_average}</p>\r\n            <p>\r\n              Release: {\" \"}\r\n              {(\r\n                movieDetails.release_date || movieDetails.first_air_date\r\n              ).substring(0, 4)}\r\n            </p>\r\n          </div>\r\n          <button className=\"play\" onClick={() => setPlay(true)}>\r\n            PLAY\r\n          </button>\r\n        </div>\r\n        <img\r\n          className=\"img\"\r\n          alt={movieDetails.title}\r\n          src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\r\n        ></img>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n","import React from \"react\";\nimport \"shaka-player/dist/controls.css\";\nimport './ShakaPlayer.css';\nconst shaka = require(\"shaka-player/dist/shaka-player.ui.js\");\n\n\n\nclass ShakaPlayer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { isIdle: false };\n    this.videoComponent = React.createRef();\n    this.videoContainer = React.createRef();\n    this.onErrorEvent = this.onErrorEvent.bind(this);\n    this.onError = this.onError.bind(this);\n  }\n  onErrorEvent(event) {\n    this.onError(event.detail);\n  }\n  onError(error) {\n    console.error(\"Error code\", error.code, \"object\", error);\n  }\n\n  //loop that hides overlay if user is idle. resetTimer events are set on parent div.\n  //isIdle state is used to hide elements via conditionally set classname.\n  resetTimer = () => {\n    clearTimeout(this.time);\n    this.time = setTimeout(this.hidePlayerOverlay, 3000);\n    this.setState({ isIdle: false });\n  };\n\n  hidePlayerOverlay = () => {\n    this.setState({ isIdle: true });\n  };\n\n  componentDidMount = () => {\n    //gets actual height of browser window and sets css property to keep the aspect ratio of stream\n    this.getVH = () => {\n      let vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n    }\n    window.addEventListener(\"resize\", this.getVH);\n\n    this.resetTimer();\n\n    var manifestUri =\n      \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\";\n\n    const video = this.videoComponent.current;\n    const videoContainer = this.videoContainer.current;\n\n    var player = new shaka.Player(video);\n\n    const uiConfig = {};\n\n    //Configuring elements to be displayed on video player control panel\n    uiConfig[\"controlPanelElements\"] = [\n      \"mute\",\n      \"volume\",\n      \"time_and_duration\",\n      \"fullscreen\",\n      \"overflow_menu\",\n    ];\n\n    const ui = new shaka.ui.Overlay(player, videoContainer, video);\n\n    ui.configure(uiConfig);\n    ui.getControls();\n\n    player.addEventListener(\"error\", this.onErrorEvent);\n\n    player\n      .load(manifestUri)\n      .then(function () {\n        console.log(\"The video has now been loaded!\");\n      })\n      .catch(this.onError);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"resize\", this.getVH);\n    if (this.time) {\n      clearTimeout(this.time);\n      this.timerHandle = 0;\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"video-container\"\n        ref={this.videoContainer}\n        onMouseMove={this.resetTimer}\n        onTouchStart={this.resetTimer}\n        onKeyDown={this.resetTimer}\n      >\n        <p id=\"video-title\" className={this.state.isIdle ? \"hide\" : null}>\n          {this.props.movieDetails.title ||\n            this.props.movieDetails.original_name}\n        </p>\n        <button\n          id=\"video-button\"\n          className={this.state.isIdle ? \"hide\" : null}\n          onClick={() => {\n            this.props.setPlay(false);\n          }}\n        >\n          X\n        </button>\n        <video\n          className=\"shaka-video\"\n          ref={this.videoComponent}\n          autoPlay\n          width=\"100%\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ShakaPlayer;\n","import React, { useState } from 'react';\nimport SearchBar from './mainpage/SearchBar/SearchBar';\nimport ContentCard from './mainpage/ContentCard/ContentCard';\nimport MovieDetails from './mainpage/MovieDetails/MovieDetails';\nimport ShakaPlayer from './ShakaPlayer/ShakaPlayer';\nimport './App.css';\n\nfunction App() {\n  const [search, setSearch] = useState();\n  const [play, setPlay] = useState();\n  const [movieDetails, setMovieDetails] = useState();\n  \n  // The api key would normally be requested from backend server for security.\n  const api_key = \"87a4b219a54dbd58a0b55ee8de87aab6\";\n\n  if (play) {\n    return <ShakaPlayer setPlay={setPlay} movieDetails={movieDetails}/>;\n  }\n  return (\n    <div className=\"App\">\n      <h1 className=\"main-title\">What <span>to</span> Watch</h1>\n      <SearchBar setSearch={setSearch} />\n      {movieDetails ? (\n        <MovieDetails\n          setPlay={setPlay}\n          movieDetails={movieDetails}\n          setMovieDetails={setMovieDetails}\n        />\n      ) : null}\n      {search && <ContentCard \n      CategoryName={\"Search Results\"}\n      url={`https://api.themoviedb.org/3/search/multi/?api_key=${api_key}&query=${search}`}\n      setMovieDetails={setMovieDetails}\n      />}\n      <ContentCard \n        CategoryName={\"Popular Movies\"}\n        url={`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}`}\n        setMovieDetails={setMovieDetails}\n      />\n      <ContentCard\n        // setMovieDetails={setMovieDetails}\n        CategoryName={\"Popular Tv Shows\"}\n        url={`https://api.themoviedb.org/3/tv/popular?api_key=${api_key}`}\n        setMovieDetails={setMovieDetails}\n      />\n      <ContentCard \n        CategoryName={\"Documentary\"}\n        url={`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=99&sort_by=vote_count.desc`}\n        setMovieDetails={setMovieDetails}\n      />\n      <ContentCard \n        CategoryName={\"Family\"}\n        url={`https://api.themoviedb.org/3/discover/movie?api_key=${api_key}&with_genres=10751&sort_by=vote_count.desc`}\n        setMovieDetails={setMovieDetails}\n      />      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}